package DynamicProgramming;

/**
 * @author Muskan Verma (https://github.com/vermamuskan)
 */

public class Solution {
  
    public static void main(String[]args){
      Scanner s=new Scanner(System.in);
      String text=s.next();
      String pattern =s.next();
      System.out.println(isMatch(text,pattern));
    }

    static boolean [][]dp;
    public static int isMatch(final String A, final String B) {
     boolean f=true;
     StringBuilder s=new StringBuilder();
     for(char c:B.toCharArray()){
         if(c=='*'&&f){
             s.append("*");f=false;
         }
         else if(c!='*'){
             s.append(c);f=true;
         }
         
     }
     
     
    dp=new boolean[A.length()+1][s.length()+1];
    dp[0][0]=true;
    if(s.charAt(0)=='*')dp[0][1]=true;
    
    for(int i=1;i<dp.length;i++){
        for(int j=1;j<dp[0].length;j++){
            
            if(A.charAt(i-1)==s.charAt(j-1)||s.charAt(j-1)=='?'){
                dp[i][j]=dp[i-1][j-1];
            }
            else if(s.charAt(j-1)=='*'){
                dp[i][j]=dp[i-1][j]||dp[i][j-1];
            }
        }
    }
    if(dp[dp.length-1][dp[0].length-1])return 1 ;
     return 0;
    }
}
