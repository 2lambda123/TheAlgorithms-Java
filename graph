package graphgfg;
import java.util.*;
public class BFS {
	int V;
	LinkedList<Integer>adj[];
	BFS(int v){
		V=v;
		adj=new LinkedList[v];
		for(int i=0;i<v;i++) {
			adj[i]=new LinkedList();
			
			}
	}
	
	void addEdge(int u,int v) {
		adj[u].add(v);
		
	}
	void bfs(int s) {
		Queue<Integer>q=new LinkedList<>();
		boolean visited[]=new boolean[V];
		
		q.add(s);
		visited[s]=true;
		while(!q.isEmpty()) {
			s=q.poll();
			System.out.println(s);
			Iterator<Integer>i=adj[s].listIterator();
			while(i.hasNext()) {
				int n=i.next();
				if(!visited[n]) {
					q.add(n);
					visited[n]=true;
				}
			}
		}
	}
	
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		BFS g=new BFS(5);
		 g.addEdge(0, 1); 
	        g.addEdge(0, 2); 
	        g.addEdge(1, 2); 
	        g.addEdge(2, 0); 
	        g.addEdge(2, 3); 
	        g.addEdge(3, 3); 
	  
	        System.out.println("Following is Breadth First Traversal "+ 
	                           "(starting from vertex 2)"); 
	  
	        g.bfs(2); 

	}

}
